{"version":3,"file":"UserService-DahXXxcg.js","sources":["../../src/services/UserService.ts"],"sourcesContent":["import { plainToInstance, type ClassConstructor } from \"class-transformer\";\r\nimport {\r\n\ttype CreateUserRequest,\r\n\ttype SignInUserRequest,\r\n} from \"merchant-idle-middleware\";\r\nimport { User } from \"merchant-idle-middleware\";\r\nimport { Service } from \"./Service\";\r\n\r\nclass UserService extends Service {\r\n\tprivate handleResponse(response: Response) {\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate jsonToInstance<T>(jsonString: any, type: ClassConstructor<T>): T {\r\n\t\tconst jsonObj = JSON.parse(jsonString);\r\n\t\tconst instance = plainToInstance(type, jsonObj);\r\n\t\treturn instance as T;\r\n\t}\r\n\r\n\tasync get(userId: string): Promise<User> {\r\n\t\tconst response = await fetch(`${this.apiUrl}/api/user/get/${userId}`);\r\n\t\tthis.handleResponse(response);\r\n\r\n\t\t// const jsonString = await response.json();\r\n\t\t// const jsonObj = JSON.parse(jsonString);\r\n\t\t// const user = plainToInstance(User, jsonObj);\r\n\t\tconst user = plainToInstance(User, await response.json());\r\n\r\n\t\treturn user;\r\n\t}\r\n\r\n\tasync create(\r\n\t\tusername: string,\r\n\t\temail: string,\r\n\t\tpassword: string\r\n\t): Promise<User> {\r\n\t\tconst request: CreateUserRequest = {\r\n\t\t\tusername: username,\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t};\r\n\t\tconst response = await fetch(`${this.apiUrl}/api/user/create`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(request),\r\n\t\t});\r\n\t\tthis.handleResponse(response);\r\n\r\n\t\tconst createdUser = plainToInstance(User, await response.json());\r\n\r\n\t\treturn createdUser;\r\n\t}\r\n\r\n\tasync signInUser(email: string, password: string): Promise<User> {\r\n\t\tconst request: SignInUserRequest = {\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t};\r\n\t\tconst response = await fetch(`${this.apiUrl}/api/user/sign-in`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(request),\r\n\t\t});\r\n\t\tthis.handleResponse(response);\r\n\r\n\t\tconst signedInUser = plainToInstance(User, await response.json());\r\n\r\n\t\treturn signedInUser;\r\n\t}\r\n}\r\n\r\nexport default new UserService();\r\n"],"names":["UserService","Service","response","jsonString","type","jsonObj","plainToInstance","userId","User","username","email","password","request","UserService$1"],"mappings":"wDAQA,MAAMA,UAAoBC,CAAQ,CACzB,eAAeC,EAAoB,CACtC,GAAA,CAACA,EAAS,GACb,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,CACzD,CAGO,eAAkBC,EAAiBC,EAA8B,CAClE,MAAAC,EAAU,KAAK,MAAMF,CAAU,EAE9B,OADUG,EAAgBF,EAAMC,CAAO,CACvC,CAGR,MAAM,IAAIE,EAA+B,CAClC,MAAAL,EAAW,MAAM,MAAM,GAAG,KAAK,MAAM,iBAAiBK,CAAM,EAAE,EACpE,YAAK,eAAeL,CAAQ,EAKfI,EAAgBE,EAAAA,KAAM,MAAMN,EAAS,MAAM,CAEjD,CAGR,MAAM,OACLO,EACAC,EACAC,EACgB,CAChB,MAAMC,EAA6B,CAClC,SAAAH,EACA,MAAAC,EACA,SAAAC,CACD,EACMT,EAAW,MAAM,MAAM,GAAG,KAAK,MAAM,mBAAoB,CAC9D,OAAQ,OACR,QAAS,CACR,eAAgB,kBACjB,EACA,KAAM,KAAK,UAAUU,CAAO,CAAA,CAC5B,EACD,YAAK,eAAeV,CAAQ,EAERI,EAAgBE,EAAAA,KAAM,MAAMN,EAAS,MAAM,CAExD,CAGR,MAAM,WAAWQ,EAAeC,EAAiC,CAChE,MAAMC,EAA6B,CAClC,MAAAF,EACA,SAAAC,CACD,EACMT,EAAW,MAAM,MAAM,GAAG,KAAK,MAAM,oBAAqB,CAC/D,OAAQ,OACR,QAAS,CACR,eAAgB,kBACjB,EACA,KAAM,KAAK,UAAUU,CAAO,CAAA,CAC5B,EACD,YAAK,eAAeV,CAAQ,EAEPI,EAAgBE,EAAAA,KAAM,MAAMN,EAAS,MAAM,CAEzD,CAET,CAEA,MAAeW,EAAA,IAAIb"}