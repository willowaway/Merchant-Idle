{"version":3,"file":"Service-DnTQtjb8.js","sources":["../../node_modules/class-transformer/esm5/enums/transformation-type.enum.js","../../node_modules/class-transformer/esm5/MetadataStorage.js","../../node_modules/class-transformer/esm5/storage.js","../../node_modules/class-transformer/esm5/utils/get-global.util.js","../../node_modules/class-transformer/esm5/utils/is-promise.util.js","../../node_modules/class-transformer/esm5/TransformOperationExecutor.js","../../node_modules/class-transformer/esm5/constants/default-options.constant.js","../../node_modules/class-transformer/esm5/ClassTransformer.js","../../node_modules/class-transformer/esm5/index.js","../../node_modules/merchant-idle-middleware/dist/models/User.js","../../node_modules/merchant-idle-middleware/dist/models/Stash.js","../../node_modules/merchant-idle-middleware/dist/models/Loot.js","../../node_modules/merchant-idle-middleware/dist/models/Item.js","../../node_modules/merchant-idle-middleware/dist/models/Monster.js","../../node_modules/merchant-idle-middleware/dist/request/CreateUserRequest.js","../../node_modules/merchant-idle-middleware/dist/request/UpdateUserRequest.js","../../node_modules/merchant-idle-middleware/dist/request/SignInUserRequest.js","../../node_modules/merchant-idle-middleware/dist/index.js","../../src/services/Service.ts"],"sourcesContent":["export var TransformationType;\n(function (TransformationType) {\n    TransformationType[TransformationType[\"PLAIN_TO_CLASS\"] = 0] = \"PLAIN_TO_CLASS\";\n    TransformationType[TransformationType[\"CLASS_TO_PLAIN\"] = 1] = \"CLASS_TO_PLAIN\";\n    TransformationType[TransformationType[\"CLASS_TO_CLASS\"] = 2] = \"CLASS_TO_CLASS\";\n})(TransformationType || (TransformationType = {}));\n//# sourceMappingURL=transformation-type.enum.js.map","import { TransformationType } from './enums';\n/**\n * Storage all library metadata.\n */\nvar MetadataStorage = /** @class */ (function () {\n    function MetadataStorage() {\n        // -------------------------------------------------------------------------\n        // Properties\n        // -------------------------------------------------------------------------\n        this._typeMetadatas = new Map();\n        this._transformMetadatas = new Map();\n        this._exposeMetadatas = new Map();\n        this._excludeMetadatas = new Map();\n        this._ancestorsMap = new Map();\n    }\n    // -------------------------------------------------------------------------\n    // Adder Methods\n    // -------------------------------------------------------------------------\n    MetadataStorage.prototype.addTypeMetadata = function (metadata) {\n        if (!this._typeMetadatas.has(metadata.target)) {\n            this._typeMetadatas.set(metadata.target, new Map());\n        }\n        this._typeMetadatas.get(metadata.target).set(metadata.propertyName, metadata);\n    };\n    MetadataStorage.prototype.addTransformMetadata = function (metadata) {\n        if (!this._transformMetadatas.has(metadata.target)) {\n            this._transformMetadatas.set(metadata.target, new Map());\n        }\n        if (!this._transformMetadatas.get(metadata.target).has(metadata.propertyName)) {\n            this._transformMetadatas.get(metadata.target).set(metadata.propertyName, []);\n        }\n        this._transformMetadatas.get(metadata.target).get(metadata.propertyName).push(metadata);\n    };\n    MetadataStorage.prototype.addExposeMetadata = function (metadata) {\n        if (!this._exposeMetadatas.has(metadata.target)) {\n            this._exposeMetadatas.set(metadata.target, new Map());\n        }\n        this._exposeMetadatas.get(metadata.target).set(metadata.propertyName, metadata);\n    };\n    MetadataStorage.prototype.addExcludeMetadata = function (metadata) {\n        if (!this._excludeMetadatas.has(metadata.target)) {\n            this._excludeMetadatas.set(metadata.target, new Map());\n        }\n        this._excludeMetadatas.get(metadata.target).set(metadata.propertyName, metadata);\n    };\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    MetadataStorage.prototype.findTransformMetadatas = function (target, propertyName, transformationType) {\n        return this.findMetadatas(this._transformMetadatas, target, propertyName).filter(function (metadata) {\n            if (!metadata.options)\n                return true;\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true)\n                return true;\n            if (metadata.options.toClassOnly === true) {\n                return (transformationType === TransformationType.CLASS_TO_CLASS ||\n                    transformationType === TransformationType.PLAIN_TO_CLASS);\n            }\n            if (metadata.options.toPlainOnly === true) {\n                return transformationType === TransformationType.CLASS_TO_PLAIN;\n            }\n            return true;\n        });\n    };\n    MetadataStorage.prototype.findExcludeMetadata = function (target, propertyName) {\n        return this.findMetadata(this._excludeMetadatas, target, propertyName);\n    };\n    MetadataStorage.prototype.findExposeMetadata = function (target, propertyName) {\n        return this.findMetadata(this._exposeMetadatas, target, propertyName);\n    };\n    MetadataStorage.prototype.findExposeMetadataByCustomName = function (target, name) {\n        return this.getExposedMetadatas(target).find(function (metadata) {\n            return metadata.options && metadata.options.name === name;\n        });\n    };\n    MetadataStorage.prototype.findTypeMetadata = function (target, propertyName) {\n        return this.findMetadata(this._typeMetadatas, target, propertyName);\n    };\n    MetadataStorage.prototype.getStrategy = function (target) {\n        var excludeMap = this._excludeMetadatas.get(target);\n        var exclude = excludeMap && excludeMap.get(undefined);\n        var exposeMap = this._exposeMetadatas.get(target);\n        var expose = exposeMap && exposeMap.get(undefined);\n        if ((exclude && expose) || (!exclude && !expose))\n            return 'none';\n        return exclude ? 'excludeAll' : 'exposeAll';\n    };\n    MetadataStorage.prototype.getExposedMetadatas = function (target) {\n        return this.getMetadata(this._exposeMetadatas, target);\n    };\n    MetadataStorage.prototype.getExcludedMetadatas = function (target) {\n        return this.getMetadata(this._excludeMetadatas, target);\n    };\n    MetadataStorage.prototype.getExposedProperties = function (target, transformationType) {\n        return this.getExposedMetadatas(target)\n            .filter(function (metadata) {\n            if (!metadata.options)\n                return true;\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true)\n                return true;\n            if (metadata.options.toClassOnly === true) {\n                return (transformationType === TransformationType.CLASS_TO_CLASS ||\n                    transformationType === TransformationType.PLAIN_TO_CLASS);\n            }\n            if (metadata.options.toPlainOnly === true) {\n                return transformationType === TransformationType.CLASS_TO_PLAIN;\n            }\n            return true;\n        })\n            .map(function (metadata) { return metadata.propertyName; });\n    };\n    MetadataStorage.prototype.getExcludedProperties = function (target, transformationType) {\n        return this.getExcludedMetadatas(target)\n            .filter(function (metadata) {\n            if (!metadata.options)\n                return true;\n            if (metadata.options.toClassOnly === true && metadata.options.toPlainOnly === true)\n                return true;\n            if (metadata.options.toClassOnly === true) {\n                return (transformationType === TransformationType.CLASS_TO_CLASS ||\n                    transformationType === TransformationType.PLAIN_TO_CLASS);\n            }\n            if (metadata.options.toPlainOnly === true) {\n                return transformationType === TransformationType.CLASS_TO_PLAIN;\n            }\n            return true;\n        })\n            .map(function (metadata) { return metadata.propertyName; });\n    };\n    MetadataStorage.prototype.clear = function () {\n        this._typeMetadatas.clear();\n        this._exposeMetadatas.clear();\n        this._excludeMetadatas.clear();\n        this._ancestorsMap.clear();\n    };\n    // -------------------------------------------------------------------------\n    // Private Methods\n    // -------------------------------------------------------------------------\n    MetadataStorage.prototype.getMetadata = function (metadatas, target) {\n        var metadataFromTargetMap = metadatas.get(target);\n        var metadataFromTarget;\n        if (metadataFromTargetMap) {\n            metadataFromTarget = Array.from(metadataFromTargetMap.values()).filter(function (meta) { return meta.propertyName !== undefined; });\n        }\n        var metadataFromAncestors = [];\n        for (var _i = 0, _a = this.getAncestors(target); _i < _a.length; _i++) {\n            var ancestor = _a[_i];\n            var ancestorMetadataMap = metadatas.get(ancestor);\n            if (ancestorMetadataMap) {\n                var metadataFromAncestor = Array.from(ancestorMetadataMap.values()).filter(function (meta) { return meta.propertyName !== undefined; });\n                metadataFromAncestors.push.apply(metadataFromAncestors, metadataFromAncestor);\n            }\n        }\n        return metadataFromAncestors.concat(metadataFromTarget || []);\n    };\n    MetadataStorage.prototype.findMetadata = function (metadatas, target, propertyName) {\n        var metadataFromTargetMap = metadatas.get(target);\n        if (metadataFromTargetMap) {\n            var metadataFromTarget = metadataFromTargetMap.get(propertyName);\n            if (metadataFromTarget) {\n                return metadataFromTarget;\n            }\n        }\n        for (var _i = 0, _a = this.getAncestors(target); _i < _a.length; _i++) {\n            var ancestor = _a[_i];\n            var ancestorMetadataMap = metadatas.get(ancestor);\n            if (ancestorMetadataMap) {\n                var ancestorResult = ancestorMetadataMap.get(propertyName);\n                if (ancestorResult) {\n                    return ancestorResult;\n                }\n            }\n        }\n        return undefined;\n    };\n    MetadataStorage.prototype.findMetadatas = function (metadatas, target, propertyName) {\n        var metadataFromTargetMap = metadatas.get(target);\n        var metadataFromTarget;\n        if (metadataFromTargetMap) {\n            metadataFromTarget = metadataFromTargetMap.get(propertyName);\n        }\n        var metadataFromAncestorsTarget = [];\n        for (var _i = 0, _a = this.getAncestors(target); _i < _a.length; _i++) {\n            var ancestor = _a[_i];\n            var ancestorMetadataMap = metadatas.get(ancestor);\n            if (ancestorMetadataMap) {\n                if (ancestorMetadataMap.has(propertyName)) {\n                    metadataFromAncestorsTarget.push.apply(metadataFromAncestorsTarget, ancestorMetadataMap.get(propertyName));\n                }\n            }\n        }\n        return metadataFromAncestorsTarget\n            .slice()\n            .reverse()\n            .concat((metadataFromTarget || []).slice().reverse());\n    };\n    MetadataStorage.prototype.getAncestors = function (target) {\n        if (!target)\n            return [];\n        if (!this._ancestorsMap.has(target)) {\n            var ancestors = [];\n            for (var baseClass = Object.getPrototypeOf(target.prototype.constructor); typeof baseClass.prototype !== 'undefined'; baseClass = Object.getPrototypeOf(baseClass.prototype.constructor)) {\n                ancestors.push(baseClass);\n            }\n            this._ancestorsMap.set(target, ancestors);\n        }\n        return this._ancestorsMap.get(target);\n    };\n    return MetadataStorage;\n}());\nexport { MetadataStorage };\n//# sourceMappingURL=MetadataStorage.js.map","import { MetadataStorage } from './MetadataStorage';\n/**\n * Default metadata storage is used as singleton and can be used to storage all metadatas.\n */\nexport var defaultMetadataStorage = new MetadataStorage();\n//# sourceMappingURL=storage.js.map","/**\n * This function returns the global object across Node and browsers.\n *\n * Note: `globalThis` is the standardized approach however it has been added to\n * Node.js in version 12. We need to include this snippet until Node 12 EOL.\n */\nexport function getGlobal() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: Cannot find name 'window'.\n    if (typeof window !== 'undefined') {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Cannot find name 'window'.\n        return window;\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore: Cannot find name 'self'.\n    if (typeof self !== 'undefined') {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: Cannot find name 'self'.\n        return self;\n    }\n}\n//# sourceMappingURL=get-global.util.js.map","export function isPromise(p) {\n    return p !== null && typeof p === 'object' && typeof p.then === 'function';\n}\n//# sourceMappingURL=is-promise.util.js.map","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { defaultMetadataStorage } from './storage';\nimport { TransformationType } from './enums';\nimport { getGlobal, isPromise } from './utils';\nfunction instantiateArrayType(arrayType) {\n    var array = new arrayType();\n    if (!(array instanceof Set) && !('push' in array)) {\n        return [];\n    }\n    return array;\n}\nvar TransformOperationExecutor = /** @class */ (function () {\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n    function TransformOperationExecutor(transformationType, options) {\n        this.transformationType = transformationType;\n        this.options = options;\n        // -------------------------------------------------------------------------\n        // Private Properties\n        // -------------------------------------------------------------------------\n        this.recursionStack = new Set();\n    }\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n    TransformOperationExecutor.prototype.transform = function (source, value, targetType, arrayType, isMap, level) {\n        var _this = this;\n        if (level === void 0) { level = 0; }\n        if (Array.isArray(value) || value instanceof Set) {\n            var newValue_1 = arrayType && this.transformationType === TransformationType.PLAIN_TO_CLASS\n                ? instantiateArrayType(arrayType)\n                : [];\n            value.forEach(function (subValue, index) {\n                var subSource = source ? source[index] : undefined;\n                if (!_this.options.enableCircularCheck || !_this.isCircular(subValue)) {\n                    var realTargetType = void 0;\n                    if (typeof targetType !== 'function' &&\n                        targetType &&\n                        targetType.options &&\n                        targetType.options.discriminator &&\n                        targetType.options.discriminator.property &&\n                        targetType.options.discriminator.subTypes) {\n                        if (_this.transformationType === TransformationType.PLAIN_TO_CLASS) {\n                            realTargetType = targetType.options.discriminator.subTypes.find(function (subType) {\n                                return subType.name === subValue[targetType.options.discriminator.property];\n                            });\n                            var options = { newObject: newValue_1, object: subValue, property: undefined };\n                            var newType = targetType.typeFunction(options);\n                            realTargetType === undefined ? (realTargetType = newType) : (realTargetType = realTargetType.value);\n                            if (!targetType.options.keepDiscriminatorProperty)\n                                delete subValue[targetType.options.discriminator.property];\n                        }\n                        if (_this.transformationType === TransformationType.CLASS_TO_CLASS) {\n                            realTargetType = subValue.constructor;\n                        }\n                        if (_this.transformationType === TransformationType.CLASS_TO_PLAIN) {\n                            subValue[targetType.options.discriminator.property] = targetType.options.discriminator.subTypes.find(function (subType) { return subType.value === subValue.constructor; }).name;\n                        }\n                    }\n                    else {\n                        realTargetType = targetType;\n                    }\n                    var value_1 = _this.transform(subSource, subValue, realTargetType, undefined, subValue instanceof Map, level + 1);\n                    if (newValue_1 instanceof Set) {\n                        newValue_1.add(value_1);\n                    }\n                    else {\n                        newValue_1.push(value_1);\n                    }\n                }\n                else if (_this.transformationType === TransformationType.CLASS_TO_CLASS) {\n                    if (newValue_1 instanceof Set) {\n                        newValue_1.add(subValue);\n                    }\n                    else {\n                        newValue_1.push(subValue);\n                    }\n                }\n            });\n            return newValue_1;\n        }\n        else if (targetType === String && !isMap) {\n            if (value === null || value === undefined)\n                return value;\n            return String(value);\n        }\n        else if (targetType === Number && !isMap) {\n            if (value === null || value === undefined)\n                return value;\n            return Number(value);\n        }\n        else if (targetType === Boolean && !isMap) {\n            if (value === null || value === undefined)\n                return value;\n            return Boolean(value);\n        }\n        else if ((targetType === Date || value instanceof Date) && !isMap) {\n            if (value instanceof Date) {\n                return new Date(value.valueOf());\n            }\n            if (value === null || value === undefined)\n                return value;\n            return new Date(value);\n        }\n        else if (!!getGlobal().Buffer && (targetType === Buffer || value instanceof Buffer) && !isMap) {\n            if (value === null || value === undefined)\n                return value;\n            return Buffer.from(value);\n        }\n        else if (isPromise(value) && !isMap) {\n            return new Promise(function (resolve, reject) {\n                value.then(function (data) { return resolve(_this.transform(undefined, data, targetType, undefined, undefined, level + 1)); }, reject);\n            });\n        }\n        else if (!isMap && value !== null && typeof value === 'object' && typeof value.then === 'function') {\n            // Note: We should not enter this, as promise has been handled above\n            // This option simply returns the Promise preventing a JS error from happening and should be an inaccessible path.\n            return value; // skip promise transformation\n        }\n        else if (typeof value === 'object' && value !== null) {\n            // try to guess the type\n            if (!targetType && value.constructor !== Object /* && TransformationType === TransformationType.CLASS_TO_PLAIN*/)\n                if (!Array.isArray(value) && value.constructor === Array) {\n                    // Somebody attempts to convert special Array like object to Array, eg:\n                    // const evilObject = { '100000000': '100000000', __proto__: [] };\n                    // This could be used to cause Denial-of-service attack so we don't allow it.\n                    // See prevent-array-bomb.spec.ts for more details.\n                }\n                else {\n                    // We are good we can use the built-in constructor\n                    targetType = value.constructor;\n                }\n            if (!targetType && source)\n                targetType = source.constructor;\n            if (this.options.enableCircularCheck) {\n                // add transformed type to prevent circular references\n                this.recursionStack.add(value);\n            }\n            var keys = this.getKeys(targetType, value, isMap);\n            var newValue = source ? source : {};\n            if (!source &&\n                (this.transformationType === TransformationType.PLAIN_TO_CLASS ||\n                    this.transformationType === TransformationType.CLASS_TO_CLASS)) {\n                if (isMap) {\n                    newValue = new Map();\n                }\n                else if (targetType) {\n                    newValue = new targetType();\n                }\n                else {\n                    newValue = {};\n                }\n            }\n            var _loop_1 = function (key) {\n                if (key === '__proto__' || key === 'constructor') {\n                    return \"continue\";\n                }\n                var valueKey = key;\n                var newValueKey = key, propertyName = key;\n                if (!this_1.options.ignoreDecorators && targetType) {\n                    if (this_1.transformationType === TransformationType.PLAIN_TO_CLASS) {\n                        var exposeMetadata = defaultMetadataStorage.findExposeMetadataByCustomName(targetType, key);\n                        if (exposeMetadata) {\n                            propertyName = exposeMetadata.propertyName;\n                            newValueKey = exposeMetadata.propertyName;\n                        }\n                    }\n                    else if (this_1.transformationType === TransformationType.CLASS_TO_PLAIN ||\n                        this_1.transformationType === TransformationType.CLASS_TO_CLASS) {\n                        var exposeMetadata = defaultMetadataStorage.findExposeMetadata(targetType, key);\n                        if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) {\n                            newValueKey = exposeMetadata.options.name;\n                        }\n                    }\n                }\n                // get a subvalue\n                var subValue = undefined;\n                if (this_1.transformationType === TransformationType.PLAIN_TO_CLASS) {\n                    /**\n                     * This section is added for the following report:\n                     * https://github.com/typestack/class-transformer/issues/596\n                     *\n                     * We should not call functions or constructors when transforming to class.\n                     */\n                    subValue = value[valueKey];\n                }\n                else {\n                    if (value instanceof Map) {\n                        subValue = value.get(valueKey);\n                    }\n                    else if (value[valueKey] instanceof Function) {\n                        subValue = value[valueKey]();\n                    }\n                    else {\n                        subValue = value[valueKey];\n                    }\n                }\n                // determine a type\n                var type = undefined, isSubValueMap = subValue instanceof Map;\n                if (targetType && isMap) {\n                    type = targetType;\n                }\n                else if (targetType) {\n                    var metadata_1 = defaultMetadataStorage.findTypeMetadata(targetType, propertyName);\n                    if (metadata_1) {\n                        var options = { newObject: newValue, object: value, property: propertyName };\n                        var newType = metadata_1.typeFunction ? metadata_1.typeFunction(options) : metadata_1.reflectedType;\n                        if (metadata_1.options &&\n                            metadata_1.options.discriminator &&\n                            metadata_1.options.discriminator.property &&\n                            metadata_1.options.discriminator.subTypes) {\n                            if (!(value[valueKey] instanceof Array)) {\n                                if (this_1.transformationType === TransformationType.PLAIN_TO_CLASS) {\n                                    type = metadata_1.options.discriminator.subTypes.find(function (subType) {\n                                        if (subValue && subValue instanceof Object && metadata_1.options.discriminator.property in subValue) {\n                                            return subType.name === subValue[metadata_1.options.discriminator.property];\n                                        }\n                                    });\n                                    type === undefined ? (type = newType) : (type = type.value);\n                                    if (!metadata_1.options.keepDiscriminatorProperty) {\n                                        if (subValue && subValue instanceof Object && metadata_1.options.discriminator.property in subValue) {\n                                            delete subValue[metadata_1.options.discriminator.property];\n                                        }\n                                    }\n                                }\n                                if (this_1.transformationType === TransformationType.CLASS_TO_CLASS) {\n                                    type = subValue.constructor;\n                                }\n                                if (this_1.transformationType === TransformationType.CLASS_TO_PLAIN) {\n                                    if (subValue) {\n                                        subValue[metadata_1.options.discriminator.property] = metadata_1.options.discriminator.subTypes.find(function (subType) { return subType.value === subValue.constructor; }).name;\n                                    }\n                                }\n                            }\n                            else {\n                                type = metadata_1;\n                            }\n                        }\n                        else {\n                            type = newType;\n                        }\n                        isSubValueMap = isSubValueMap || metadata_1.reflectedType === Map;\n                    }\n                    else if (this_1.options.targetMaps) {\n                        // try to find a type in target maps\n                        this_1.options.targetMaps\n                            .filter(function (map) { return map.target === targetType && !!map.properties[propertyName]; })\n                            .forEach(function (map) { return (type = map.properties[propertyName]); });\n                    }\n                    else if (this_1.options.enableImplicitConversion &&\n                        this_1.transformationType === TransformationType.PLAIN_TO_CLASS) {\n                        // if we have no registererd type via the @Type() decorator then we check if we have any\n                        // type declarations in reflect-metadata (type declaration is emited only if some decorator is added to the property.)\n                        var reflectedType = Reflect.getMetadata('design:type', targetType.prototype, propertyName);\n                        if (reflectedType) {\n                            type = reflectedType;\n                        }\n                    }\n                }\n                // if value is an array try to get its custom array type\n                var arrayType_1 = Array.isArray(value[valueKey])\n                    ? this_1.getReflectedType(targetType, propertyName)\n                    : undefined;\n                // const subValueKey = TransformationType === TransformationType.PLAIN_TO_CLASS && newKeyName ? newKeyName : key;\n                var subSource = source ? source[valueKey] : undefined;\n                // if its deserialization then type if required\n                // if we uncomment this types like string[] will not work\n                // if (this.transformationType === TransformationType.PLAIN_TO_CLASS && !type && subValue instanceof Object && !(subValue instanceof Date))\n                //     throw new Error(`Cannot determine type for ${(targetType as any).name }.${propertyName}, did you forget to specify a @Type?`);\n                // if newValue is a source object that has method that match newKeyName then skip it\n                if (newValue.constructor.prototype) {\n                    var descriptor = Object.getOwnPropertyDescriptor(newValue.constructor.prototype, newValueKey);\n                    if ((this_1.transformationType === TransformationType.PLAIN_TO_CLASS ||\n                        this_1.transformationType === TransformationType.CLASS_TO_CLASS) &&\n                        // eslint-disable-next-line @typescript-eslint/unbound-method\n                        ((descriptor && !descriptor.set) || newValue[newValueKey] instanceof Function))\n                        return \"continue\";\n                }\n                if (!this_1.options.enableCircularCheck || !this_1.isCircular(subValue)) {\n                    var transformKey = this_1.transformationType === TransformationType.PLAIN_TO_CLASS ? newValueKey : key;\n                    var finalValue = void 0;\n                    if (this_1.transformationType === TransformationType.CLASS_TO_PLAIN) {\n                        // Get original value\n                        finalValue = value[transformKey];\n                        // Apply custom transformation\n                        finalValue = this_1.applyCustomTransformations(finalValue, targetType, transformKey, value, this_1.transformationType);\n                        // If nothing change, it means no custom transformation was applied, so use the subValue.\n                        finalValue = value[transformKey] === finalValue ? subValue : finalValue;\n                        // Apply the default transformation\n                        finalValue = this_1.transform(subSource, finalValue, type, arrayType_1, isSubValueMap, level + 1);\n                    }\n                    else {\n                        if (subValue === undefined && this_1.options.exposeDefaultValues) {\n                            // Set default value if nothing provided\n                            finalValue = newValue[newValueKey];\n                        }\n                        else {\n                            finalValue = this_1.transform(subSource, subValue, type, arrayType_1, isSubValueMap, level + 1);\n                            finalValue = this_1.applyCustomTransformations(finalValue, targetType, transformKey, value, this_1.transformationType);\n                        }\n                    }\n                    if (finalValue !== undefined || this_1.options.exposeUnsetFields) {\n                        if (newValue instanceof Map) {\n                            newValue.set(newValueKey, finalValue);\n                        }\n                        else {\n                            newValue[newValueKey] = finalValue;\n                        }\n                    }\n                }\n                else if (this_1.transformationType === TransformationType.CLASS_TO_CLASS) {\n                    var finalValue = subValue;\n                    finalValue = this_1.applyCustomTransformations(finalValue, targetType, key, value, this_1.transformationType);\n                    if (finalValue !== undefined || this_1.options.exposeUnsetFields) {\n                        if (newValue instanceof Map) {\n                            newValue.set(newValueKey, finalValue);\n                        }\n                        else {\n                            newValue[newValueKey] = finalValue;\n                        }\n                    }\n                }\n            };\n            var this_1 = this;\n            // traverse over keys\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                _loop_1(key);\n            }\n            if (this.options.enableCircularCheck) {\n                this.recursionStack.delete(value);\n            }\n            return newValue;\n        }\n        else {\n            return value;\n        }\n    };\n    TransformOperationExecutor.prototype.applyCustomTransformations = function (value, target, key, obj, transformationType) {\n        var _this = this;\n        var metadatas = defaultMetadataStorage.findTransformMetadatas(target, key, this.transformationType);\n        // apply versioning options\n        if (this.options.version !== undefined) {\n            metadatas = metadatas.filter(function (metadata) {\n                if (!metadata.options)\n                    return true;\n                return _this.checkVersion(metadata.options.since, metadata.options.until);\n            });\n        }\n        // apply grouping options\n        if (this.options.groups && this.options.groups.length) {\n            metadatas = metadatas.filter(function (metadata) {\n                if (!metadata.options)\n                    return true;\n                return _this.checkGroups(metadata.options.groups);\n            });\n        }\n        else {\n            metadatas = metadatas.filter(function (metadata) {\n                return !metadata.options || !metadata.options.groups || !metadata.options.groups.length;\n            });\n        }\n        metadatas.forEach(function (metadata) {\n            value = metadata.transformFn({ value: value, key: key, obj: obj, type: transformationType, options: _this.options });\n        });\n        return value;\n    };\n    // preventing circular references\n    TransformOperationExecutor.prototype.isCircular = function (object) {\n        return this.recursionStack.has(object);\n    };\n    TransformOperationExecutor.prototype.getReflectedType = function (target, propertyName) {\n        if (!target)\n            return undefined;\n        var meta = defaultMetadataStorage.findTypeMetadata(target, propertyName);\n        return meta ? meta.reflectedType : undefined;\n    };\n    TransformOperationExecutor.prototype.getKeys = function (target, object, isMap) {\n        var _this = this;\n        // determine exclusion strategy\n        var strategy = defaultMetadataStorage.getStrategy(target);\n        if (strategy === 'none')\n            strategy = this.options.strategy || 'exposeAll'; // exposeAll is default strategy\n        // get all keys that need to expose\n        var keys = [];\n        if (strategy === 'exposeAll' || isMap) {\n            if (object instanceof Map) {\n                keys = Array.from(object.keys());\n            }\n            else {\n                keys = Object.keys(object);\n            }\n        }\n        if (isMap) {\n            // expose & exclude do not apply for map keys only to fields\n            return keys;\n        }\n        /**\n         * If decorators are ignored but we don't want the extraneous values, then we use the\n         * metadata to decide which property is needed, but doesn't apply the decorator effect.\n         */\n        if (this.options.ignoreDecorators && this.options.excludeExtraneousValues && target) {\n            var exposedProperties = defaultMetadataStorage.getExposedProperties(target, this.transformationType);\n            var excludedProperties = defaultMetadataStorage.getExcludedProperties(target, this.transformationType);\n            keys = __spreadArray(__spreadArray([], exposedProperties, true), excludedProperties, true);\n        }\n        if (!this.options.ignoreDecorators && target) {\n            // add all exposed to list of keys\n            var exposedProperties = defaultMetadataStorage.getExposedProperties(target, this.transformationType);\n            if (this.transformationType === TransformationType.PLAIN_TO_CLASS) {\n                exposedProperties = exposedProperties.map(function (key) {\n                    var exposeMetadata = defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (exposeMetadata && exposeMetadata.options && exposeMetadata.options.name) {\n                        return exposeMetadata.options.name;\n                    }\n                    return key;\n                });\n            }\n            if (this.options.excludeExtraneousValues) {\n                keys = exposedProperties;\n            }\n            else {\n                keys = keys.concat(exposedProperties);\n            }\n            // exclude excluded properties\n            var excludedProperties_1 = defaultMetadataStorage.getExcludedProperties(target, this.transformationType);\n            if (excludedProperties_1.length > 0) {\n                keys = keys.filter(function (key) {\n                    return !excludedProperties_1.includes(key);\n                });\n            }\n            // apply versioning options\n            if (this.options.version !== undefined) {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (!exposeMetadata || !exposeMetadata.options)\n                        return true;\n                    return _this.checkVersion(exposeMetadata.options.since, exposeMetadata.options.until);\n                });\n            }\n            // apply grouping options\n            if (this.options.groups && this.options.groups.length) {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = defaultMetadataStorage.findExposeMetadata(target, key);\n                    if (!exposeMetadata || !exposeMetadata.options)\n                        return true;\n                    return _this.checkGroups(exposeMetadata.options.groups);\n                });\n            }\n            else {\n                keys = keys.filter(function (key) {\n                    var exposeMetadata = defaultMetadataStorage.findExposeMetadata(target, key);\n                    return (!exposeMetadata ||\n                        !exposeMetadata.options ||\n                        !exposeMetadata.options.groups ||\n                        !exposeMetadata.options.groups.length);\n                });\n            }\n        }\n        // exclude prefixed properties\n        if (this.options.excludePrefixes && this.options.excludePrefixes.length) {\n            keys = keys.filter(function (key) {\n                return _this.options.excludePrefixes.every(function (prefix) {\n                    return key.substr(0, prefix.length) !== prefix;\n                });\n            });\n        }\n        // make sure we have unique keys\n        keys = keys.filter(function (key, index, self) {\n            return self.indexOf(key) === index;\n        });\n        return keys;\n    };\n    TransformOperationExecutor.prototype.checkVersion = function (since, until) {\n        var decision = true;\n        if (decision && since)\n            decision = this.options.version >= since;\n        if (decision && until)\n            decision = this.options.version < until;\n        return decision;\n    };\n    TransformOperationExecutor.prototype.checkGroups = function (groups) {\n        if (!groups)\n            return true;\n        return this.options.groups.some(function (optionGroup) { return groups.includes(optionGroup); });\n    };\n    return TransformOperationExecutor;\n}());\nexport { TransformOperationExecutor };\n//# sourceMappingURL=TransformOperationExecutor.js.map","/**\n * These are the default options used by any transformation operation.\n */\nexport var defaultOptions = {\n    enableCircularCheck: false,\n    enableImplicitConversion: false,\n    excludeExtraneousValues: false,\n    excludePrefixes: undefined,\n    exposeDefaultValues: false,\n    exposeUnsetFields: true,\n    groups: undefined,\n    ignoreDecorators: false,\n    strategy: undefined,\n    targetMaps: undefined,\n    version: undefined,\n};\n//# sourceMappingURL=default-options.constant.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { TransformOperationExecutor } from './TransformOperationExecutor';\nimport { TransformationType } from './enums';\nimport { defaultOptions } from './constants/default-options.constant';\nvar ClassTransformer = /** @class */ (function () {\n    function ClassTransformer() {\n    }\n    ClassTransformer.prototype.instanceToPlain = function (object, options) {\n        var executor = new TransformOperationExecutor(TransformationType.CLASS_TO_PLAIN, __assign(__assign({}, defaultOptions), options));\n        return executor.transform(undefined, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.classToPlainFromExist = function (object, plainObject, options) {\n        var executor = new TransformOperationExecutor(TransformationType.CLASS_TO_PLAIN, __assign(__assign({}, defaultOptions), options));\n        return executor.transform(plainObject, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.plainToInstance = function (cls, plain, options) {\n        var executor = new TransformOperationExecutor(TransformationType.PLAIN_TO_CLASS, __assign(__assign({}, defaultOptions), options));\n        return executor.transform(undefined, plain, cls, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.plainToClassFromExist = function (clsObject, plain, options) {\n        var executor = new TransformOperationExecutor(TransformationType.PLAIN_TO_CLASS, __assign(__assign({}, defaultOptions), options));\n        return executor.transform(clsObject, plain, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.instanceToInstance = function (object, options) {\n        var executor = new TransformOperationExecutor(TransformationType.CLASS_TO_CLASS, __assign(__assign({}, defaultOptions), options));\n        return executor.transform(undefined, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.classToClassFromExist = function (object, fromObject, options) {\n        var executor = new TransformOperationExecutor(TransformationType.CLASS_TO_CLASS, __assign(__assign({}, defaultOptions), options));\n        return executor.transform(fromObject, object, undefined, undefined, undefined, undefined);\n    };\n    ClassTransformer.prototype.serialize = function (object, options) {\n        return JSON.stringify(this.instanceToPlain(object, options));\n    };\n    /**\n     * Deserializes given JSON string to a object of the given class.\n     */\n    ClassTransformer.prototype.deserialize = function (cls, json, options) {\n        var jsonObject = JSON.parse(json);\n        return this.plainToInstance(cls, jsonObject, options);\n    };\n    /**\n     * Deserializes given JSON string to an array of objects of the given class.\n     */\n    ClassTransformer.prototype.deserializeArray = function (cls, json, options) {\n        var jsonObject = JSON.parse(json);\n        return this.plainToInstance(cls, jsonObject, options);\n    };\n    return ClassTransformer;\n}());\nexport { ClassTransformer };\n//# sourceMappingURL=ClassTransformer.js.map","import { ClassTransformer } from './ClassTransformer';\nexport { ClassTransformer } from './ClassTransformer';\nexport * from './decorators';\nexport * from './interfaces';\nexport * from './enums';\nvar classTransformer = new ClassTransformer();\nexport function classToPlain(object, options) {\n    return classTransformer.instanceToPlain(object, options);\n}\nexport function instanceToPlain(object, options) {\n    return classTransformer.instanceToPlain(object, options);\n}\nexport function classToPlainFromExist(object, plainObject, options) {\n    return classTransformer.classToPlainFromExist(object, plainObject, options);\n}\nexport function plainToClass(cls, plain, options) {\n    return classTransformer.plainToInstance(cls, plain, options);\n}\nexport function plainToInstance(cls, plain, options) {\n    return classTransformer.plainToInstance(cls, plain, options);\n}\nexport function plainToClassFromExist(clsObject, plain, options) {\n    return classTransformer.plainToClassFromExist(clsObject, plain, options);\n}\nexport function instanceToInstance(object, options) {\n    return classTransformer.instanceToInstance(object, options);\n}\nexport function classToClassFromExist(object, fromObject, options) {\n    return classTransformer.classToClassFromExist(object, fromObject, options);\n}\nexport function serialize(object, options) {\n    return classTransformer.serialize(object, options);\n}\n/**\n * Deserializes given JSON string to a object of the given class.\n *\n * @deprecated This function is being removed. Please use the following instead:\n * ```\n * instanceToClass(cls, JSON.parse(json), options)\n * ```\n */\nexport function deserialize(cls, json, options) {\n    return classTransformer.deserialize(cls, json, options);\n}\n/**\n * Deserializes given JSON string to an array of objects of the given class.\n *\n * @deprecated This function is being removed. Please use the following instead:\n * ```\n * JSON.parse(json).map(value => instanceToClass(cls, value, options))\n * ```\n *\n */\nexport function deserializeArray(cls, json, options) {\n    return classTransformer.deserializeArray(cls, json, options);\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.User = void 0;\nclass User {\n    id;\n    username;\n    email;\n}\nexports.User = User;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Stash = void 0;\nclass Stash {\n    id;\n    userId;\n    itemId;\n    numberInInShop;\n    numberInStash;\n    priceEstimated;\n    reaction;\n    isPopular;\n}\nexports.Stash = Stash;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Loot = void 0;\nclass Loot {\n    id;\n    name;\n}\nexports.Loot = Loot;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Item = void 0;\nclass Item {\n    id;\n    name;\n    category;\n    type;\n    tier;\n    baseValue;\n    src;\n}\nexports.Item = Item;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Monster = void 0;\nclass Monster {\n    id;\n    hp;\n    lootId;\n}\nexports.Monster = Monster;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./models/User\"), exports);\n__exportStar(require(\"./models/Stash\"), exports);\n__exportStar(require(\"./models/Loot\"), exports);\n__exportStar(require(\"./models/Item\"), exports);\n__exportStar(require(\"./models/Monster\"), exports);\n__exportStar(require(\"./request/CreateUserRequest\"), exports);\n__exportStar(require(\"./request/UpdateUserRequest\"), exports);\n__exportStar(require(\"./request/SignInUserRequest\"), exports);\n","export abstract class Service {\r\n\tpublic apiUrl: string =\r\n\t\t\"https://merchant-idle-backend-c130ae8072ab.herokuapp.com\"; // \"http://localhost:3000\";\r\n}\r\n"],"names":["TransformationType","MetadataStorage","metadata","target","propertyName","transformationType","name","excludeMap","exclude","exposeMap","expose","metadatas","metadataFromTargetMap","metadataFromTarget","meta","metadataFromAncestors","_i","_a","ancestor","ancestorMetadataMap","metadataFromAncestor","ancestorResult","metadataFromAncestorsTarget","ancestors","baseClass","defaultMetadataStorage","getGlobal","isPromise","p","__spreadArray","to","from","pack","i","l","ar","instantiateArrayType","arrayType","array","TransformOperationExecutor","options","source","value","targetType","isMap","level","_this","newValue_1","subValue","index","subSource","realTargetType","subType","newType","value_1","resolve","reject","data","keys","newValue","_loop_1","key","valueKey","newValueKey","this_1","exposeMetadata","type","isSubValueMap","metadata_1","map","reflectedType","arrayType_1","descriptor","transformKey","finalValue","keys_1","obj","object","strategy","exposedProperties","excludedProperties","excludedProperties_1","prefix","self","since","until","decision","groups","optionGroup","defaultOptions","__assign","t","s","ClassTransformer","executor","plainObject","cls","plain","clsObject","fromObject","json","jsonObject","classTransformer","plainToInstance","User_1","User$1","__publicField","User","Stash_1","Stash$1","Stash","Loot_1","Loot$1","Loot","Item_1","Item$1","Item","Monster_1","Monster$1","Monster","CreateUserRequest","UpdateUserRequest","SignInUserRequest","__createBinding","this","o","m","k","k2","desc","__exportStar","exports","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","require$$6","require$$7","Service"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]}