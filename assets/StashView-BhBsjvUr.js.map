{"version":3,"file":"StashView-BhBsjvUr.js","sources":["../../src/services/StashService.ts","../../src/views/tabs/StashView.vue"],"sourcesContent":["import { plainToInstance, type ClassConstructor } from \"class-transformer\";\r\nimport { StashItemView } from \"merchant-idle-middleware\";\r\nimport { Service } from \"./Service\";\r\n\r\nclass StashService extends Service {\r\n\tprivate handleResponse(response: Response) {\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getStashItemViewForUser(userId: string): Promise<StashItemView[]> {\r\n\t\tconst response = await fetch(\r\n\t\t\t`${this.apiUrl}/api/stash/get/stash-item-view/${userId}`\r\n\t\t);\r\n\t\tthis.handleResponse(response);\r\n\r\n\t\tconst responseJson = await response.json();\r\n\t\tconst stashItems: StashItemView[] = responseJson.map((data: any) =>\r\n\t\t\tplainToInstance(StashItemView, data)\r\n\t\t);\r\n\r\n\t\treturn stashItems;\r\n\t}\r\n}\r\n\r\nexport default new StashService();\r\n","<script setup lang=\"ts\">\nimport { reactive } from \"vue\";\nimport { useMainStore } from \"@/stores/main\";\nimport { watch } from \"vue\";\nimport type { StashItemView } from \"merchant-idle-middleware\";\nimport StashService from \"@/services/StashService\";\n\nconst main = useMainStore();\n\nconst state = reactive<{ stashItems: StashItemView[] }>({\n\tstashItems: [],\n});\n\nasync function loadStash() {\n\tif (main.userId) {\n\t\tconst stashItems = await StashService.getStashItemViewForUser(\n\t\t\tmain.userId\n\t\t);\n\t\tstate.stashItems = stashItems;\n\t} else {\n\t\tconsole.error(\"Load Stash without user defined in pinia\");\n\t}\n}\n\nloadStash();\n// const unwatch = watch(\n// \t() => main.userId, // The property you want to watch\n// \t(newValue, oldValue) => {\n// \t\t// Code to execute when the property changes\n// \t\tconsole.log(`User changed from ${oldValue} to ${newValue}`);\n// \t\tloadStash();\n\n// \t\tunwatch();\n// \t}\n// );\n</script>\n\n<template>\n\t<div class=\"content\">\n\t\t<div class=\"row items-push\">\n\t\t\t<div\n\t\t\t\tv-for=\"(stashItem, index) in state.stashItems\"\n\t\t\t\t:key=\"index\"\n\t\t\t\tclass=\"col-md-6 col-lg-4 col-xl-3\"\n\t\t\t>\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:void(0)\"\n\t\t\t\t\tclass=\"img-link img-link-zoom-in img-thumb img-lightbox\"\n\t\t\t\t>\n\t\t\t\t\t<img\n\t\t\t\t\t\tclass=\"img-fluid\"\n\t\t\t\t\t\twidth=\"50\"\n\t\t\t\t\t\t:src=\"`${stashItem.src}`\"\n\t\t\t\t\t\t:alt=\"`${stashItem.name}`\"\n\t\t\t\t\t/>\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</template>\n"],"names":["StashService","Service","response","userId","data","plainToInstance","StashItemView","StashService$1","main","useMainStore","state","reactive","loadStash","stashItems"],"mappings":"4IAIA,MAAMA,UAAqBC,CAAQ,CAC1B,eAAeC,EAAoB,CACtC,GAAA,CAACA,EAAS,GACb,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,CACzD,CAGD,MAAM,wBAAwBC,EAA0C,CACvE,MAAMD,EAAW,MAAM,MACtB,GAAG,KAAK,MAAM,kCAAkCC,CAAM,EACvD,EACA,YAAK,eAAeD,CAAQ,GAEP,MAAMA,EAAS,KAAK,GACQ,IAAKE,GACrDC,EAAgBC,EAAAA,cAAeF,CAAI,CACpC,CAEO,CAET,CAEA,MAAeG,EAAA,IAAIP,yLCnBnB,MAAMQ,EAAOC,EAAa,EAEpBC,EAAQC,EAA0C,CACvD,WAAY,CAAA,CAAC,CACb,EAED,eAAeC,GAAY,CAC1B,GAAIJ,EAAK,OAAQ,CACV,MAAAK,EAAa,MAAMb,EAAa,wBACrCQ,EAAK,MACN,EACAE,EAAM,WAAaG,CAAA,MAEnB,QAAQ,MAAM,0CAA0C,CACzD,CAGS,OAAAD,EAAA"}