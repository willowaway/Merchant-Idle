{"version":3,"file":"UserService-ClHi8_BI.js","sources":["../../src/services/UserService.ts"],"sourcesContent":["import { plainToInstance, type ClassConstructor } from \"class-transformer\";\r\nimport {\r\n\ttype CreateUserRequest,\r\n\ttype SignInUserRequest,\r\n} from \"merchant-idle-middleware\";\r\nimport { User } from \"merchant-idle-middleware\";\r\nimport { Service } from \"./Service\";\r\n\r\nclass UserService extends Service {\r\n\tasync get(userId: string): Promise<User> {\r\n\t\tconst response = await fetch(`${this.apiUrl}/api/user/get/${userId}`);\r\n\t\tconst responseJson = await this.handleResponse(response);\r\n\r\n\t\tconst user = plainToInstance(User, responseJson);\r\n\r\n\t\treturn user;\r\n\t}\r\n\r\n\tasync create(\r\n\t\tusername: string,\r\n\t\temail: string,\r\n\t\tpassword: string\r\n\t): Promise<User> {\r\n\t\tconst request: CreateUserRequest = {\r\n\t\t\tusername: username,\r\n\t\t\temail: email,\r\n\t\t\tpassword: password,\r\n\t\t};\r\n\t\tconst response = await fetch(`${this.apiUrl}/api/user/create`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(request),\r\n\t\t});\r\n\r\n\t\tconst responseJson = await this.handleResponse(response);\r\n\t\tconst createdUser = plainToInstance(User, responseJson);\r\n\r\n\t\treturn createdUser;\r\n\t}\r\n\r\n\tasync signInUser(email: string, password: string): Promise<User | string> {\r\n\t\ttry {\r\n\t\t\tconst request: SignInUserRequest = {\r\n\t\t\t\temail: email,\r\n\t\t\t\tpassword: password,\r\n\t\t\t};\r\n\r\n\t\t\tconst response = await fetch(`${this.apiUrl}/api/user/sign-in`, {\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\theaders: {\r\n\t\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t},\r\n\t\t\t\tbody: JSON.stringify(request),\r\n\t\t\t});\r\n\t\t\tconst responseJson = await this.handleResponse(response);\r\n\t\t\tconst signedInUser = plainToInstance(User, responseJson);\r\n\r\n\t\t\treturn signedInUser;\r\n\t\t} catch (error) {\r\n\t\t\treturn `${error}`;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default new UserService();\r\n"],"names":["UserService","Service","userId","response","responseJson","plainToInstance","User","username","email","password","request","error","UserService$1"],"mappings":"sDAQA,MAAMA,UAAoBC,CAAQ,CACjC,MAAM,IAAIC,EAA+B,CAClC,MAAAC,EAAW,MAAM,MAAM,GAAG,KAAK,MAAM,iBAAiBD,CAAM,EAAE,EAC9DE,EAAe,MAAM,KAAK,eAAeD,CAAQ,EAIhD,OAFME,EAAgBC,EAAA,KAAMF,CAAY,CAExC,CAGR,MAAM,OACLG,EACAC,EACAC,EACgB,CAChB,MAAMC,EAA6B,CAClC,SAAAH,EACA,MAAAC,EACA,SAAAC,CACD,EACMN,EAAW,MAAM,MAAM,GAAG,KAAK,MAAM,mBAAoB,CAC9D,OAAQ,OACR,QAAS,CACR,eAAgB,kBACjB,EACA,KAAM,KAAK,UAAUO,CAAO,CAAA,CAC5B,EAEKN,EAAe,MAAM,KAAK,eAAeD,CAAQ,EAGhD,OAFaE,EAAgBC,EAAA,KAAMF,CAAY,CAE/C,CAGR,MAAM,WAAWI,EAAeC,EAA0C,CACrE,GAAA,CACH,MAAMC,EAA6B,CAClC,MAAAF,EACA,SAAAC,CACD,EAEMN,EAAW,MAAM,MAAM,GAAG,KAAK,MAAM,oBAAqB,CAC/D,OAAQ,OACR,QAAS,CACR,eAAgB,kBACjB,EACA,KAAM,KAAK,UAAUO,CAAO,CAAA,CAC5B,EACKN,EAAe,MAAM,KAAK,eAAeD,CAAQ,EAGhD,OAFcE,EAAgBC,EAAA,KAAMF,CAAY,QAG/CO,EAAO,CACf,MAAO,GAAGA,CAAK,EAAA,CAChB,CAEF,CAEA,MAAeC,EAAA,IAAIZ"}