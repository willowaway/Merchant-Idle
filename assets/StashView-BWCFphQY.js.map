{"version":3,"file":"StashView-BWCFphQY.js","sources":["../../src/services/StashService.ts","../../src/views/tabs/StashView.vue"],"sourcesContent":["import { plainToInstance, type ClassConstructor } from \"class-transformer\";\r\nimport { Stash } from \"merchant-idle-middleware\";\r\nimport { Service } from \"./Service\";\r\n\r\nclass StashService extends Service {\r\n\tprivate handleResponse(response: Response) {\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t}\r\n\t}\r\n\r\n\tasync getStashesForUser(userId: number): Promise<Stash[]> {\r\n\t\tconst response = await fetch(\r\n\t\t\t`${this.apiUrl}/api/stash/get/stashes-for-user/${userId}`\r\n\t\t);\r\n\t\tthis.handleResponse(response);\r\n\r\n\t\tconst responseJson = await response.json();\r\n\t\tconst stashes: Stash[] = responseJson.map((data: any) =>\r\n\t\t\tplainToInstance(Stash, data)\r\n\t\t);\r\n\r\n\t\treturn stashes;\r\n\t}\r\n}\r\n\r\nexport default new StashService();\r\n","<script setup lang=\"ts\">\r\nimport { reactive } from \"vue\";\r\nimport { useMainStore } from \"@/stores/main\";\r\nimport { watch } from \"vue\";\r\nimport type { Stash } from \"merchant-idle-middleware\";\r\nimport StashService from \"@/services/StashService\";\r\n\r\nconst main = useMainStore();\r\n\r\nconst state = reactive<{ stashItems: Stash[] }>({\r\n\tstashItems: [],\r\n});\r\n\r\nasync function loadStash() {\r\n\tif (main.user) {\r\n\t\tStashService.getStashesForUser(main.user.id);\r\n\t} else {\r\n\t\tconsole.error(\"Load Stash without user defined in pinia\");\r\n\t}\r\n}\r\n\r\nconst unwatch = watch(\r\n\t() => main.user, // The property you want to watch\r\n\t(newValue, oldValue) => {\r\n\t\t// Code to execute when the property changes\r\n\t\tconsole.log(`User changed from ${oldValue} to ${newValue}`);\r\n\t\tloadStash();\r\n\r\n\t\tunwatch();\r\n\t}\r\n);\r\n</script>\r\n\r\n<template>\r\n\t<div class=\"content\">\r\n\t\t<div class=\"row items-push\">\r\n\t\t\t<div\r\n\t\t\t\tv-for=\"(stashItem, index) in state.stashItems\"\r\n\t\t\t\t:key=\"index\"\r\n\t\t\t\tclass=\"col-md-6 col-lg-4 col-xl-3\"\r\n\t\t\t>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"javascript:void(0)\"\r\n\t\t\t\t\tclass=\"img-link img-link-zoom-in img-thumb img-lightbox\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<!-- TODO: src for stashItem -->\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tclass=\"img-fluid\"\r\n\t\t\t\t\t\t:src=\"`${stashItem.id}`\"\r\n\t\t\t\t\t\talt=\"Photo\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n"],"names":["StashService","Service","response","userId","data","plainToInstance","Stash","StashService$1","main","useMainStore","state","reactive","loadStash","unwatch","watch","newValue","oldValue"],"mappings":"yIAIA,MAAMA,UAAqBC,CAAQ,CAC1B,eAAeC,EAAoB,CACtC,GAAA,CAACA,EAAS,GACb,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,CACzD,CAGD,MAAM,kBAAkBC,EAAkC,CACzD,MAAMD,EAAW,MAAM,MACtB,GAAG,KAAK,MAAM,mCAAmCC,CAAM,EACxD,EACA,YAAK,eAAeD,CAAQ,GAEP,MAAMA,EAAS,KAAK,GACH,IAAKE,GAC1CC,EAAgBC,EAAAA,MAAOF,CAAI,CAC5B,CAEO,CAET,CAEA,MAAeG,EAAA,IAAIP,mLCnBnB,MAAMQ,EAAOC,EAAa,EAEpBC,EAAQC,EAAkC,CAC/C,WAAY,CAAA,CAAC,CACb,EAED,eAAeC,GAAY,CACtBJ,EAAK,KACKR,EAAA,kBAAkBQ,EAAK,KAAK,EAAE,EAE3C,QAAQ,MAAM,0CAA0C,CACzD,CAGD,MAAMK,EAAUC,EACf,IAAMN,EAAK,KACX,CAACO,EAAUC,IAAa,CAEvB,QAAQ,IAAI,qBAAqBA,CAAQ,OAAOD,CAAQ,EAAE,EAChDH,EAAA,EAEFC,EAAA,CAAA,CAEV"}